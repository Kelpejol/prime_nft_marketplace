// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class BuyerApprovedForListing extends ethereum.Event {
  get params(): BuyerApprovedForListing__Params {
    return new BuyerApprovedForListing__Params(this);
  }
}

export class BuyerApprovedForListing__Params {
  _event: BuyerApprovedForListing;

  constructor(event: BuyerApprovedForListing) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BuyerRemovedForListing extends ethereum.Event {
  get params(): BuyerRemovedForListing__Params {
    return new BuyerRemovedForListing__Params(this);
  }
}

export class BuyerRemovedForListing__Params {
  _event: BuyerRemovedForListing;

  constructor(event: BuyerRemovedForListing) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CancelledListing extends ethereum.Event {
  get params(): CancelledListing__Params {
    return new CancelledListing__Params(this);
  }
}

export class CancelledListing__Params {
  _event: CancelledListing;

  constructor(event: CancelledListing) {
    this._event = event;
  }

  get listingCreator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get listingId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CurrencyApprovedForListing extends ethereum.Event {
  get params(): CurrencyApprovedForListing__Params {
    return new CurrencyApprovedForListing__Params(this);
  }
}

export class CurrencyApprovedForListing__Params {
  _event: CurrencyApprovedForListing;

  constructor(event: CurrencyApprovedForListing) {
    this._event = event;
  }

  get listingId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get currency(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pricePerToken(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ListingPlanUpdated extends ethereum.Event {
  get params(): ListingPlanUpdated__Params {
    return new ListingPlanUpdated__Params(this);
  }
}

export class ListingPlanUpdated__Params {
  _event: ListingPlanUpdated;

  constructor(event: ListingPlanUpdated) {
    this._event = event;
  }

  get endTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ListingUpdated extends ethereum.Event {
  get params(): ListingUpdated__Params {
    return new ListingUpdated__Params(this);
  }
}

export class ListingUpdated__Params {
  _event: ListingUpdated;

  constructor(event: ListingUpdated) {
    this._event = event;
  }

  get currency(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pricePerToken(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NewListingCreated extends ethereum.Event {
  get params(): NewListingCreated__Params {
    return new NewListingCreated__Params(this);
  }
}

export class NewListingCreated__Params {
  _event: NewListingCreated;

  constructor(event: NewListingCreated) {
    this._event = event;
  }

  get listingCreator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get listingId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get assetContract(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get listing(): NewListingCreatedListingStruct {
    return changetype<NewListingCreatedListingStruct>(
      this._event.parameters[3].value.toTuple(),
    );
  }
}

export class NewListingCreatedListingStruct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get pricePerToken(): BigInt {
    return this[2].toBigInt();
  }

  get startTimestamp(): BigInt {
    return this[3].toBigInt();
  }

  get endTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get listingCreator(): Address {
    return this[5].toAddress();
  }

  get assetContract(): Address {
    return this[6].toAddress();
  }

  get currency(): Address {
    return this[7].toAddress();
  }

  get tokenType(): i32 {
    return this[8].toI32();
  }

  get listingType(): i32 {
    return this[9].toI32();
  }

  get status(): i32 {
    return this[10].toI32();
  }

  get reserved(): boolean {
    return this[11].toBoolean();
  }
}

export class NewSale extends ethereum.Event {
  get params(): NewSale__Params {
    return new NewSale__Params(this);
  }
}

export class NewSale__Params {
  _event: NewSale;

  constructor(event: NewSale) {
    this._event = event;
  }

  get listingCreator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get listingId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get assetContract(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get totalPricePaid(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class DirectListingsLogic__checkUpkeepResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getUpkeepNeeded(): boolean {
    return this.value0;
  }

  getPerformData(): Bytes {
    return this.value1;
  }
}

export class DirectListingsLogic__getAllListingsResultValue0Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get pricePerToken(): BigInt {
    return this[2].toBigInt();
  }

  get startTimestamp(): BigInt {
    return this[3].toBigInt();
  }

  get endTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get listingCreator(): Address {
    return this[5].toAddress();
  }

  get assetContract(): Address {
    return this[6].toAddress();
  }

  get currency(): Address {
    return this[7].toAddress();
  }

  get tokenType(): i32 {
    return this[8].toI32();
  }

  get listingType(): i32 {
    return this[9].toI32();
  }

  get status(): i32 {
    return this[10].toI32();
  }

  get reserved(): boolean {
    return this[11].toBoolean();
  }
}

export class DirectListingsLogic__getAllValidListingsResultValue0Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get pricePerToken(): BigInt {
    return this[2].toBigInt();
  }

  get startTimestamp(): BigInt {
    return this[3].toBigInt();
  }

  get endTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get listingCreator(): Address {
    return this[5].toAddress();
  }

  get assetContract(): Address {
    return this[6].toAddress();
  }

  get currency(): Address {
    return this[7].toAddress();
  }

  get tokenType(): i32 {
    return this[8].toI32();
  }

  get listingType(): i32 {
    return this[9].toI32();
  }

  get status(): i32 {
    return this[10].toI32();
  }

  get reserved(): boolean {
    return this[11].toBoolean();
  }
}

export class DirectListingsLogic__getListingResultValue0Struct extends ethereum.Tuple {
  get listingId(): BigInt {
    return this[0].toBigInt();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get pricePerToken(): BigInt {
    return this[2].toBigInt();
  }

  get startTimestamp(): BigInt {
    return this[3].toBigInt();
  }

  get endTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get listingCreator(): Address {
    return this[5].toAddress();
  }

  get assetContract(): Address {
    return this[6].toAddress();
  }

  get currency(): Address {
    return this[7].toAddress();
  }

  get tokenType(): i32 {
    return this[8].toI32();
  }

  get listingType(): i32 {
    return this[9].toI32();
  }

  get status(): i32 {
    return this[10].toI32();
  }

  get reserved(): boolean {
    return this[11].toBoolean();
  }
}

export class DirectListingsLogic__getListingTypeResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class DirectListingsLogic extends ethereum.SmartContract {
  static bind(address: Address): DirectListingsLogic {
    return new DirectListingsLogic("DirectListingsLogic", address);
  }

  _msgData(): Bytes {
    let result = super.call("_msgData", "_msgData():(bytes)", []);

    return result[0].toBytes();
  }

  try__msgData(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("_msgData", "_msgData():(bytes)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  _msgSender(): Address {
    let result = super.call("_msgSender", "_msgSender():(address)", []);

    return result[0].toAddress();
  }

  try__msgSender(): ethereum.CallResult<Address> {
    let result = super.tryCall("_msgSender", "_msgSender():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  checkUpkeep(param0: Bytes): DirectListingsLogic__checkUpkeepResult {
    let result = super.call("checkUpkeep", "checkUpkeep(bytes):(bool,bytes)", [
      ethereum.Value.fromBytes(param0),
    ]);

    return new DirectListingsLogic__checkUpkeepResult(
      result[0].toBoolean(),
      result[1].toBytes(),
    );
  }

  try_checkUpkeep(
    param0: Bytes,
  ): ethereum.CallResult<DirectListingsLogic__checkUpkeepResult> {
    let result = super.tryCall(
      "checkUpkeep",
      "checkUpkeep(bytes):(bool,bytes)",
      [ethereum.Value.fromBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DirectListingsLogic__checkUpkeepResult(
        value[0].toBoolean(),
        value[1].toBytes(),
      ),
    );
  }

  getAllListings(): Array<DirectListingsLogic__getAllListingsResultValue0Struct> {
    let result = super.call(
      "getAllListings",
      "getAllListings():((uint256,uint256,uint256,uint128,uint128,address,address,address,uint8,uint8,uint8,bool)[])",
      [],
    );

    return result[0].toTupleArray<DirectListingsLogic__getAllListingsResultValue0Struct>();
  }

  try_getAllListings(): ethereum.CallResult<
    Array<DirectListingsLogic__getAllListingsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllListings",
      "getAllListings():((uint256,uint256,uint256,uint128,uint128,address,address,address,uint8,uint8,uint8,bool)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<DirectListingsLogic__getAllListingsResultValue0Struct>(),
    );
  }

  getAllValidListings(): Array<DirectListingsLogic__getAllValidListingsResultValue0Struct> {
    let result = super.call(
      "getAllValidListings",
      "getAllValidListings():((uint256,uint256,uint256,uint128,uint128,address,address,address,uint8,uint8,uint8,bool)[])",
      [],
    );

    return result[0].toTupleArray<DirectListingsLogic__getAllValidListingsResultValue0Struct>();
  }

  try_getAllValidListings(): ethereum.CallResult<
    Array<DirectListingsLogic__getAllValidListingsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllValidListings",
      "getAllValidListings():((uint256,uint256,uint256,uint128,uint128,address,address,address,uint8,uint8,uint8,bool)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<DirectListingsLogic__getAllValidListingsResultValue0Struct>(),
    );
  }

  getApprovedBuyer(_listingId: BigInt): Address {
    let result = super.call(
      "getApprovedBuyer",
      "getApprovedBuyer(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_listingId)],
    );

    return result[0].toAddress();
  }

  try_getApprovedBuyer(_listingId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApprovedBuyer",
      "getApprovedBuyer(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_listingId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getListing(
    _listingId: BigInt,
  ): DirectListingsLogic__getListingResultValue0Struct {
    let result = super.call(
      "getListing",
      "getListing(uint256):((uint256,uint256,uint256,uint128,uint128,address,address,address,uint8,uint8,uint8,bool))",
      [ethereum.Value.fromUnsignedBigInt(_listingId)],
    );

    return changetype<DirectListingsLogic__getListingResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getListing(
    _listingId: BigInt,
  ): ethereum.CallResult<DirectListingsLogic__getListingResultValue0Struct> {
    let result = super.tryCall(
      "getListing",
      "getListing(uint256):((uint256,uint256,uint256,uint128,uint128,address,address,address,uint8,uint8,uint8,bool))",
      [ethereum.Value.fromUnsignedBigInt(_listingId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DirectListingsLogic__getListingResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getListingType(_listingType: i32): DirectListingsLogic__getListingTypeResult {
    let result = super.call(
      "getListingType",
      "getListingType(uint8):(uint128,uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_listingType))],
    );

    return new DirectListingsLogic__getListingTypeResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_getListingType(
    _listingType: i32,
  ): ethereum.CallResult<DirectListingsLogic__getListingTypeResult> {
    let result = super.tryCall(
      "getListingType",
      "getListingType(uint8):(uint128,uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_listingType))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DirectListingsLogic__getListingTypeResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  getPlatformFee(_currency: Address, _price: BigInt): BigInt {
    let result = super.call(
      "getPlatformFee",
      "getPlatformFee(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_currency),
        ethereum.Value.fromUnsignedBigInt(_price),
      ],
    );

    return result[0].toBigInt();
  }

  try_getPlatformFee(
    _currency: Address,
    _price: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPlatformFee",
      "getPlatformFee(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_currency),
        ethereum.Value.fromUnsignedBigInt(_price),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _nativeTokenWrapper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveBuyerForListingCall extends ethereum.Call {
  get inputs(): ApproveBuyerForListingCall__Inputs {
    return new ApproveBuyerForListingCall__Inputs(this);
  }

  get outputs(): ApproveBuyerForListingCall__Outputs {
    return new ApproveBuyerForListingCall__Outputs(this);
  }
}

export class ApproveBuyerForListingCall__Inputs {
  _call: ApproveBuyerForListingCall;

  constructor(call: ApproveBuyerForListingCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _buyer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ApproveBuyerForListingCall__Outputs {
  _call: ApproveBuyerForListingCall;

  constructor(call: ApproveBuyerForListingCall) {
    this._call = call;
  }
}

export class BuyFromListingCall extends ethereum.Call {
  get inputs(): BuyFromListingCall__Inputs {
    return new BuyFromListingCall__Inputs(this);
  }

  get outputs(): BuyFromListingCall__Outputs {
    return new BuyFromListingCall__Outputs(this);
  }
}

export class BuyFromListingCall__Inputs {
  _call: BuyFromListingCall;

  constructor(call: BuyFromListingCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _buyFor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class BuyFromListingCall__Outputs {
  _call: BuyFromListingCall;

  constructor(call: BuyFromListingCall) {
    this._call = call;
  }
}

export class CancelListingCall extends ethereum.Call {
  get inputs(): CancelListingCall__Inputs {
    return new CancelListingCall__Inputs(this);
  }

  get outputs(): CancelListingCall__Outputs {
    return new CancelListingCall__Outputs(this);
  }
}

export class CancelListingCall__Inputs {
  _call: CancelListingCall;

  constructor(call: CancelListingCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelListingCall__Outputs {
  _call: CancelListingCall;

  constructor(call: CancelListingCall) {
    this._call = call;
  }
}

export class CreateListingCall extends ethereum.Call {
  get inputs(): CreateListingCall__Inputs {
    return new CreateListingCall__Inputs(this);
  }

  get outputs(): CreateListingCall__Outputs {
    return new CreateListingCall__Outputs(this);
  }
}

export class CreateListingCall__Inputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }

  get _params(): CreateListingCall_paramsStruct {
    return changetype<CreateListingCall_paramsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class CreateListingCall__Outputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateListingCall_paramsStruct extends ethereum.Tuple {
  get assetContract(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get currency(): Address {
    return this[2].toAddress();
  }

  get pricePerToken(): BigInt {
    return this[3].toBigInt();
  }

  get listingType(): i32 {
    return this[4].toI32();
  }

  get reserved(): boolean {
    return this[5].toBoolean();
  }
}

export class PerformUpkeepCall extends ethereum.Call {
  get inputs(): PerformUpkeepCall__Inputs {
    return new PerformUpkeepCall__Inputs(this);
  }

  get outputs(): PerformUpkeepCall__Outputs {
    return new PerformUpkeepCall__Outputs(this);
  }
}

export class PerformUpkeepCall__Inputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PerformUpkeepCall__Outputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }
}

export class RemoveApprovedBuyerForListingCall extends ethereum.Call {
  get inputs(): RemoveApprovedBuyerForListingCall__Inputs {
    return new RemoveApprovedBuyerForListingCall__Inputs(this);
  }

  get outputs(): RemoveApprovedBuyerForListingCall__Outputs {
    return new RemoveApprovedBuyerForListingCall__Outputs(this);
  }
}

export class RemoveApprovedBuyerForListingCall__Inputs {
  _call: RemoveApprovedBuyerForListingCall;

  constructor(call: RemoveApprovedBuyerForListingCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveApprovedBuyerForListingCall__Outputs {
  _call: RemoveApprovedBuyerForListingCall;

  constructor(call: RemoveApprovedBuyerForListingCall) {
    this._call = call;
  }
}

export class UpdateListingCall extends ethereum.Call {
  get inputs(): UpdateListingCall__Inputs {
    return new UpdateListingCall__Inputs(this);
  }

  get outputs(): UpdateListingCall__Outputs {
    return new UpdateListingCall__Outputs(this);
  }
}

export class UpdateListingCall__Inputs {
  _call: UpdateListingCall;

  constructor(call: UpdateListingCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _params(): UpdateListingCall_paramsStruct {
    return changetype<UpdateListingCall_paramsStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }
}

export class UpdateListingCall__Outputs {
  _call: UpdateListingCall;

  constructor(call: UpdateListingCall) {
    this._call = call;
  }
}

export class UpdateListingCall_paramsStruct extends ethereum.Tuple {
  get currency(): Address {
    return this[0].toAddress();
  }

  get pricePerToken(): BigInt {
    return this[1].toBigInt();
  }
}

export class UpdatedListingPlanCall extends ethereum.Call {
  get inputs(): UpdatedListingPlanCall__Inputs {
    return new UpdatedListingPlanCall__Inputs(this);
  }

  get outputs(): UpdatedListingPlanCall__Outputs {
    return new UpdatedListingPlanCall__Outputs(this);
  }
}

export class UpdatedListingPlanCall__Inputs {
  _call: UpdatedListingPlanCall;

  constructor(call: UpdatedListingPlanCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _listingType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class UpdatedListingPlanCall__Outputs {
  _call: UpdatedListingPlanCall;

  constructor(call: UpdatedListingPlanCall) {
    this._call = call;
  }
}
